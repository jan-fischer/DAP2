import java.util.Random;

public class Main {
	
	static int[][] mem;

	public static int Z(int[] A, int i, int j) {

		if (i > 0 && (A[i - 1] < A[i])) {
			return Z(A,i - 1, j);
		} else if (i > 0 && A[i - 1] >= A[i]) {
			return Math.max(Z(A, i - 1, i - 1), (j - i) + 1);
		} else {
			return j - i + 1;
		}
	}

	public static int Z2(int[] A, int i, int j) {
		
		if (i > 0 && (A[i - 1] < A[i])) {
			mem[i-1][j-1] = 1+mem[i][j];
			int ha  = Z(A,i - 1, j);
			
			return ha;
		} else if (i > 0 && A[i - 1] >= A[i]) {
			mem[i-1][i-1] = 1;
			int a = Z(A, i - 1, i - 1);
			
			return Math.max(a, (j - i) + 1);
		} else {
			return j - i + 1;
		}
	}

	public static void initMemoFeld(int i) {
		mem = new int[i + 1][i + 1];
		for (int k = 0; k < i + 1; k++) {
			for (int l = 0; l < i + 1; l++) {
				mem[k][l] = -1;
			}
		}
	}
	
	public static int[] initRandomFeld(int n){
		Random numberGenerator = new Random();
		int[] A = new int[n];
		for( int i = 0; i<n; i++){
			A[i]  = Math.abs(numberGenerator.nextInt()/10000000);
		}
		
		return A;
	}
	
	public static void print1DArray(int[] A){

		for(int i = 0; i<A.length; i++){
			System.out.print(i+"\t");
		}
		System.out.println();
		for(int i = 0; i<A.length; i++){
			System.out.print(A[i]+"\t");
		}
		System.out.println();
	}
	
	public static void print2DArray(int[][] A){
		System.out.print("\t");
		for(int i = 0; i<A.length; i++){
			System.out.print(i+"\t");
		}
		for (int k = 0; k < A.length; k++) {
			System.out.print("\n"+k+"\t| ");
			for (int l = 0; l < A.length; l++) {
				System.out.print(A[k][l]+"\t");
			}
		}
	}

	public static void main(String[] args) {
		int[] A = initRandomFeld(50);
		initMemoFeld(A.length);
		System.out.println(Z(A, A.length - 1, A.length - 1));
		System.out.println(Z2(A, A.length - 1, A.length - 1));
		System.out.println("Sequenz:");
		print1DArray(A);
		
		System.out.println("Dynamische Programmierung:");
		print2DArray(mem);
		
	}
}
