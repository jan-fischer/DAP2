import java.util.Random;

public class Main {
	
	static int[][] mem;

	public static int Z(int[] A, int i, int j) {

		if (i > 0 && (A[i - 1] < A[i])) {
			return Z(A,i - 1, j);
		} else if (i > 0 && A[i - 1] >= A[i]) {
			return Math.max(Z(A, i - 1, i - 1), (j - i) + 1);
		} else {
			return j - i + 1;
		}
	}

	public static int Z2(int[] A, int i, int j) {
		if (mem[i][j] != -1)
			return mem[i][j];
		else {
			if (i > 0 && (A[i - 1] < A[i])) {
				mem[i][j] = Z2(A, i - 1, j);

			} else if (i > 0 && A[i - 1] >= A[i]) {
				mem[i][j] = Math.max(Z2(A, i - 1, i - 1), (j - i) + 1);
			} else {
				mem[i][j] = j - i + 1;
			}

			return mem[i][j];
		}
	}

	public static void initMemoFeld(int i) {
		mem = new int[i + 1][i + 1];
		for (int k = 0; k < i + 1; k++) {
			for (int l = 0; l < i + 1; l++) {
				mem[k][l] = -1;
			}
		}
	}
	
	public static int[] initRandomFeld(int n){
		Random numberGenerator = new Random();
		int[] A = new int[n];
		for( int i = 0; i<n; i++){
			A[i]  = numberGenerator.nextInt();
		}
		
		return A;
	}
	
	public static void print1DArray(int[] A){
		for(int i = 0; i<A.length; i++){
			System.out.println(A[i]+"->");
		}
	}
	
	public static void print2DArray(int[][] A){
		for (int k = 0; k < A.length; k++) {
			System.out.println();
			for (int l = 0; l < A.length; l++) {
				System.out.println(A[k][l]+"\\t");
			}
		}
	}

	public static void main(String[] args) {
		int[] A = initRandomFeld(999);
		initMemoFeld(A.length);
		System.out.println(Z2(A, A.length - 1, A.length - 1));
		print2DArray(mem);
		
	}
}
